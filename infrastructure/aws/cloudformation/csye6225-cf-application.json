{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Parameters": {
		"imgID": {
			"Description" : "ImageId",
			"Type" : "String"
		},
		"instanceType": {
			"Description" : "InstanceType",
			"Type" : "String"
		},
		"volumeType": {
			"Description" : "volumeType",
			"Type" : "String"
		},
		"volumeSize": {
			"Description" : "volumeSize",
			"Type" : "Number"
		},
		"keyName" : {
			"Description" : "keyName",
			"Type" : "String"
		},
		"EC2InstanceName": {
			"Description" : "EC2InstanceTagName",
			"Type" : "String"
		},
		"securityGroupId": {
			"Description" : "securityGroupId",
			"Type" : "String"
		},
		"subnetId": {
			"Description" : "subnetId",
			"Type" : "String"
		},
		"IamInstanceProfileName": {
			"Description" : "IamInstanceProfileName",
			"Type" : "String"
		},
		"DynamoDBTableName": {
			"Description" : "DynamoDBTableName",
			"Type" : "String"
		},
		"S3BucketName": {
			"Description" : "S3BucketName",
			"Type" : "String"
		},
		"DBEngine": {
			"Description" : "DBEngine",
			"Type" : "String"
		},
		"DBEngineVersion": {
			"Description" : "EngineVersion",
			"Type" : "String"
		},
		"DBInstanceClass": {
			"Description" : "DBInstanceClass",
			"Type" : "String"
		},
		"DBInstanceIdentifier": {
			"Description" : "DBInstanceIdentifier",
			"Type" : "String"
		},
		"DBUser": {
			"Description" : "DBUser",
			"Type" : "String"
		},
		"DBPassword": {
			"Description" : "DBPassword",
			"Type" : "String"
		},
		"DBName": {
			"Description" : "DBName",
			"Type" : "String"
		},
		"DBSubnetGroup": {
			"Type" : "String"
		},
		"DBSecurityGroupId": {
			"Type" : "String"
		},
		"SNSTopicName":{
			"Type" : "String"
		}
	},
	"Resources": {
		"MyEC2Instance" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"InstanceType" : {"Ref" : "instanceType"},
				"ImageId" : {"Ref" : "imgID"},
				"DisableApiTermination" : "false",
				"BlockDeviceMappings" : [{
					"DeviceName" : "/dev/sda1",
					"Ebs" : {
						"VolumeType" : {"Ref" : "volumeType"},
						"DeleteOnTermination" : "false",
						"VolumeSize" : {"Ref" : "volumeSize"}
					}
					}],
					"KeyName" : {"Ref" : "keyName"},
					"SubnetId" : {"Ref" : "subnetId"},
					"SecurityGroupIds" : [{"Ref" : "securityGroupId"}],
					"IamInstanceProfile" : {"Ref" : "IamInstanceProfileName"},
					"Tags" : [{
						"Key" : "Name",
						"Value" : {"Ref" : "EC2InstanceName"}
						}],
						"UserData": {
              "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash -xe \n",
                    "sudo apt-get update \n",
                    "sudo apt-get install openjdk-8-jdk -y\n",
                    "sudo apt-get install ruby -y \n",
                    "sudo apt-get install wget -y \n",
                    "sudo apt-get install python -y \n",
										"sudo apt-get update \n",
                    "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
                    "sudo chmod +x ./install \n",
                    "sudo ./install auto \n",
                    "sudo service codedeploy-agent start \n",
                    "sudo apt-get install tomcat8 -y \n",
										"sudo chmod o+w /etc/default/tomcat8 \n",
										"sudo echo JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.profiles.active=aws\\\"\\ >> /etc/default/tomcat8 \n",
										"sudo echo JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.datasource.username=csye6225master -Dspring.datasource.password=csye6225password\\\"\\ >> /etc/default/tomcat8 \n",
										{
										  "Fn::Join": [
										    "",
										    [
										      "sudo echo JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.datasource.url=jdbc:mysql://",
										      {"Fn::GetAtt": ["myRDSDBInstance","Endpoint.Address"]},
										      ":3306/csye6225\\\"\\ >> /etc/default/tomcat8 \n"
										    ]
										  ]
										},
										{
 											"Fn::Join": [
   											"",
   											[
     											"sudo echo JAVA_OPTS=\\\"\\${JAVA_OPTS} -Daws.cloudformation.bucket.name=",
     											{"Ref" : "S3BucketName"},"\\\"\\ >> /etc/default/tomcat8 \n"
   											]
 											]
										},
										"sudo service tomcat8 restart \n",
										"sudo wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py \n",
										"sudo python ./awslogs-agent-setup.py --region us-east-1 \n",
										"sudo echo '#!/bin/sh' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo '[Unit]' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'Description=The CloudWatch Logs agent' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'After=rc-local.service' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo '' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo '[Service]' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'Type=simple' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'Restart=always' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'KillMode=process' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'TimeoutSec=infinity' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'PIDFile=/var/awslogs/state/awslogs.pid' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'ExecStart=/var/awslogs/bin/awslogs-agent-launcher.sh --start --background --pidfile $PIDFILE --user awslogs --chuid awslogs &' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo '' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo '[Install]' >> /etc/systemd/system/awslogs.service \n",
										"sudo echo 'WantedBy=multi-user.target' >> /etc/systemd/system/awslogs.service \n",
										"sudo chmod +x /etc/systemd/system/awslogs.service \n",
										"sudo systemctl start awslogs.service \n",
										"sudo systemctl enable awslogs.service \n"
									]
                ]
              }
            }
					},
					"DependsOn" : "myRDSDBInstance"
				},
				"myDynamoDBTable" : {
					"Type" : "AWS::DynamoDB::Table",
					"Properties" : {
						"AttributeDefinitions" : [
							{
								"AttributeName" : "id",
								"AttributeType" : "S"
							}
						],
						"KeySchema" : [
							{
								"AttributeName" : "id",
								"KeyType" : "HASH"
							}
						],
						"ProvisionedThroughput" : {
							"ReadCapacityUnits" : "5",
							"WriteCapacityUnits" : "5"
						},
						"TableName" : {"Ref" : "DynamoDBTableName"},
						"TimeToLiveSpecification": {
							"AttributeName": "TTL",
							"Enabled": "true"
						}
					}
				},
				"myS3Bucket" : {
					"Type" : "AWS::S3::Bucket",
					"Properties" : {
						"BucketName" : {"Ref" : "S3BucketName"}
					}
				},
				"myRDSDBInstance" : {
					"Type" : "AWS::RDS::DBInstance",
					"Properties" : {
						"BackupRetentionPeriod" : "0",
						"AllocatedStorage" : "5",
						"Engine" : {"Ref" : "DBEngine"},
						"EngineVersion" : {"Ref" : "DBEngineVersion"},
						"DBInstanceClass" : {"Ref" : "DBInstanceClass"},
						"MultiAZ" : "false",
						"DBInstanceIdentifier" : {"Ref" : "DBInstanceIdentifier"},
						"MasterUsername" : {"Ref" : "DBUser"},
						"MasterUserPassword" : {"Ref" : "DBPassword"},
						"DBSubnetGroupName" : {"Ref" : "DBSubnetGroup"},
						"PubliclyAccessible": "false",
						"DBName" : { "Ref" : "DBName" },
						"VPCSecurityGroups" : [{"Ref" : "DBSecurityGroupId"}]
					}
				},
				"mySNSTopic" : {
					"Type":"AWS::SNS::Topic",
         	"Properties":{
            "TopicName":{ "Ref":"SNSTopicName"}
         	}
				}
			}
		}
